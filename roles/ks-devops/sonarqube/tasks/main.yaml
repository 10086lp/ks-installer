---

- name: ks-devops | Getting sonarqube installation files
  copy:
    src: "sonarqube"
    dest: "{{ kubesphere_dir }}/"

- name: ks-devops | Creating ks-jenkins webhook(external)
  uri:
    url: "{{ sonar_server_url }}/api/webhooks/create"
    method: POST
    user: "{{ sonar_server_token }}"
    password: ""
    force_basic_auth: yes
    body_format: form-urlencoded
    body:
      name: ks-jenkins
      url: 'http://ks-jenkins.kubesphere-devops-system.svc.cluster.local/sonarqube-webhook/'
  when:
    - devops.sonarqube.enabled is defined
    - devops.sonarqube.enabled == true
    - devops.sonarqube.externalSonarUrl is  defined
    - devops.sonarqube.externalSonarToken is  defined

- name: Sonarqube | Check sonarqube PersistentVolumeClaim
  shell: >
    {{ bin_dir }}/kubectl get pvc -n kubesphere-devops-system ks-sonarqube-postgresql -o jsonpath='{.status.capacity.storage}'
  register: sonarqube_pvc
  ignore_errors: True

- name: Sonarqube | Setting sonarqube pv size
  set_fact:
    postgresql_pv_size: "{{ sonarqube_pvc.stdout }}"
  when:
    - sonarqube_pvc.rc == 0
    - sonarqube_pvc.stdout != ""
  ignore_errors: True


- name: Sonarqube | Get Volume Name
  shell: >
    {{ bin_dir }}/kubectl get pvc -n kubesphere-devops-system ks-sonarqube-postgresql
    -o jsonpath='{.spec.volumeName}'
  register: sonarqube_pv_name
  ignore_errors: True

- name: Sonarqube | Set Volume Name
  set_fact:
    sonarqube_volume_name: {{ sonarqube_pv_name.stdout }}
  when:
    - sonarqube_pv_name.rc == 0
    - sonarqube_pv_name.stdout != ""
  ignore_errors: True


- name: Sonarqube | Creating manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kubesphere_dir }}/sonarqube/{{ item.file }}"
  with_items:
    - { name: custom-values-sonarqube, file: custom-values-sonarqube.yaml }
  when:
    - devops.sonarqube.enabled is defined
    - devops.sonarqube.enabled == true
    - devops.sonarqube.externalSonarUrl is not defined
    - devops.sonarqube.externalSonarToken is not defined


- name: Sonarqube | Check Sonarqube
  shell: >
    {{ bin_dir }}/helm list ks-sonarqube
  register: sonar_check
  ignore_errors: True


- import_tasks: sonarqube.yaml
  when:
    - devops.sonarqube.enabled is defined
    - devops.sonarqube.enabled == true
    - devops.sonarqube.externalSonarUrl is not defined
    - devops.sonarqube.externalSonarToken is not defined
    - (sonar_check.stdout.find("DEPLOYED") == -1) or (sonar_check.stdout.find("7.6-0217") == -1)

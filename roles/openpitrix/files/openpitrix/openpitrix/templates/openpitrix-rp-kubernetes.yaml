apiVersion: v1
kind: Service
metadata:
  name: openpitrix-rp-kubernetes
  labels:
    app: openpitrix
    component: openpitrix-rp-kubernetes
    version: {{ .Values.version }}
spec:
  selector:
    app: openpitrix
    component: openpitrix-rp-kubernetes
  ports:
  - name: openpitrix-rp-kubernetes
    protocol: TCP
    port: 9121
    targetPort: 9121
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openpitrix-rp-kubernetes-deployment
  labels:
    app: openpitrix
    component: openpitrix-rp-kubernetes
    version: {{ .Values.version }}
spec:
  selector:
    matchLabels:
      app: openpitrix
      component: openpitrix-rp-kubernetes
  replicas: 1
  template:
    metadata:
      labels:
        app: openpitrix
        component: openpitrix-rp-kubernetes
        version: {{ .Values.version }}
    spec:
      initContainers:
      - name: wait-etcd
        image: "{{ .Values.busybox.repository }}:{{ .Values.busybox.tag }}"
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'until nc -z {{ .Values.etcd.svc }} {{ .Values.etcd.port }}; do echo "waiting for etcd"; sleep 2; done;']
      - name: wait-runtime-manager
        image: "{{ .Values.busybox.repository }}:{{ .Values.busybox.tag }}"
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'until nc -z openpitrix-rp-manager.{{ .Release.Namespace }}.svc 9121; do echo "waiting for runtime-manager"; sleep 2; done;']
      containers:
      - name: openpitrix-rp-kubernetes
        image: "{{ .Values.openpitrix_rp.image.repository }}:{{ .Values.openpitrix_rp.image.tag }}"
        imagePullPolicy: {{ .Values.openpitrix_rp.image.pullPolicy }}
        command:
          - runtime-provider
        ports:
        - containerPort: 9121
          name: rp-kubernetes
        env:
        - name: OPENPITRIX_GRPC_SHOW_ERROR_CAUSE
          value: "true"
        - name: OPENPITRIX_LOG_LEVEL
          value: "debug"
        - name: OPENPITRIX_ETCD_ENDPOINTS
          value: "{{ .Values.etcd.svc }}:{{ .Values.etcd.port }}"
        - name: OPENPITRIX_MYSQL_HOST
          value: "{{ .Values.mysql.svc }}"
        resources:
          limits:
            cpu: "{{ .Values.openpitrix_rp.limits.cpu }}"
            memory: "{{ .Values.openpitrix_rp.limits.memory }}"
          requests:
            cpu: "{{ .Values.openpitrix_rp.requests.cpu }}"
            memory: "{{ .Values.openpitrix_rp.requests.memory }}"


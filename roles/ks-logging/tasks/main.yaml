---
- import_tasks: pre-install.yaml

- name: ks-logging | Getting logging installation files
  copy:
    src: "logging"
    dest: "{{ kubesphere_dir }}/"

- import_tasks: get_old_config.yaml

- name: ks-logging | Creating manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kubesphere_dir }}/logging/{{ item.file }}"
  with_items:
    - { path: logging, file: custom-fluentbit-fluentBit.yaml }
    - { path: logging, file: custom-fluentbit-operator-deployment.yaml }
    - { path: logging, file: custom-output-elasticsearch.yaml }
    - { path: logging, file: custom-values-elasticsearch.yaml }
    - { path: logging, file: custom-values-elasticsearch-curator.yaml }
    - { path: logging, file: custom-values-kibana.yaml }
    - { path: logging, file: custom-output-elasticsearch-events.yaml }
    - { path: logging, file: custom-output-elasticsearch-auditing.yaml }


- name: ks-logging | comment elasticsearch storageclass parameter
  shell: >
    sed -i 's/\(^.*storageClass:.*$\)/#\1/' {{ kubesphere_dir }}/logging/custom-values-elasticsearch.yaml
  when:
    - sts_number.stdout != "0"
    - sc_number.stdout == "0"


- name: ks-logging | Checking elasticsearch-logging-data-svc
  shell: >
    {{ bin_dir }}/kubectl get svc -n kubesphere-logging-system
  register: elasticsearch_logging_data_svc
  ignore_errors: True


- name: ks-logging | Checking kubesphere-version
  shell: >
    {{ bin_dir }}/kubectl describe  configmap -n kubesphere-system ks-console-ae-config | grep "kubesphere:" | awk '{print $2}'
  register: kubesphere_version
  ignore_errors: True


- name: ks-logging | Changing logging index
  shell: >
    index_name=logstash-$(date  +"%Y.%m.%d" -d  "-{{ item }} days");
    index_alias=ks-logstash-log-$(date  +"%Y.%m.%d" -d  "-{{ item }} days");
    curl -X POST "$({{ bin_dir }}/kubectl get svc elasticsearch-logging-data  -n kubesphere-logging-system -o=jsonpath='{.spec.clusterIP}'):9200/_aliases" 
    -H 'Content-Type: application/json' 
    -d '{ "actions" : [ { "add" : { "index" : "'"$index_name"'", "alias" : "'"$index_alias"'" } } ] }'
  with_sequence: start=0 end=6 stride=1
  when:
    - elasticsearch_logging_data_svc.stdout.find("elasticsearch-logging-data") != -1
    - kubesphere_version.stdout == "2.0.0"
  ignore_errors: True


- name: ks-logging | Backup old fluentbit crd
  shell: >
    {{ bin_dir }}/kubectl get fluentbits.logging.kubesphere.io -n kubesphere-logging-system fluent-bit -o yaml > {{ kubesphere_dir }}/logging/fluentbit-crd.yaml.bak
  when:
    - kubesphere_version.stdout.split('.')[0] == "2"


- name: ks-logging | Deleting old fluentbit operator
  shell: >
    {{ bin_dir }}/kubectl delete {{ item.type }} -n kubesphere-logging-system {{ item.name }}
  loop:
    - { type: deploy, name: logging-fluentbit-operator }
    - { type: fluentbits.logging.kubesphere.io, name: fluent-bit }
    - { type: ds, name: fluent-bit }
    - { type: crd, name: fluentbits.logging.kubesphere.io }
  when:
    - kubesphere_version.stdout.split('.')[0] == "2"

    
- name: ks-logging | Prepare fluentbit operator setup
  shell: >
    {{ bin_dir }}/kubectl apply -f {{ kubesphere_dir }}/logging/fluentbit-operator/init


- name: ks-logging | Deploy new fluentbit operator
  shell: >
    {{ bin_dir }}/kubectl apply -f {{ kubesphere_dir }}/logging/fluentbit-operator/{{ item }}
  loop:
    - fluent-bit
    - custom-output-elasticsearch.yaml
    - custom-output-elasticsearch-events.yaml
    - custom-output-elasticsearch-auditing.yaml

- name: ks-logging | Check elasticsearch
  shell: >
    {{ bin_dir }}/helm list elasticsearch-logging
  register: es_check
  ignore_errors: True


- import_tasks: elasticsearch.yaml
  when:
    - logging.externalElasticsearchUrl is not defined
    - logging.externalElasticsearchPort is not defined
    - (es_check.stdout.find("DEPLOYED") == -1) or (es_check.stdout.find("6.7.0-0217") == -1)


- name: ks-logging | Check elasticsearch-logging-curator
  shell: >
    {{ bin_dir }}/helm list elasticsearch-logging-curator
  register: curator_check
  ignore_errors: True


- name: ks-logging | Deploy elasticsearch-logging-curator
  shell: >
    {{ bin_dir }}/helm upgrade --install elasticsearch-logging-curator 
    {{ kubesphere_dir }}/logging/elasticsearch-curator-1.3.3.tgz  
    -f {{ kubesphere_dir }}/logging/custom-values-elasticsearch-curator.yaml
    --namespace kubesphere-logging-system
  when:
    - (curator_check.stdout.find("DEPLOYED") == -1) or (curator_check.stdout.find("5.5.4-0217") == -1)


- block:
    - name: ks-logging | Check elasticsearch-logging-kibana
      shell: >
        {{ bin_dir }}/helm list elasticsearch-logging-kibana
      register: kibana_check
      ignore_errors: True

    - name: ks-logging | Deploy elasticsearch-logging-kibana
      shell: >
        {{ bin_dir }}/helm upgrade --install elasticsearch-logging-kibana
        {{ kubesphere_dir }}/logging/kibana-2.2.1.tgz
        -f {{ kubesphere_dir }}/logging/custom-values-kibana.yaml
        --namespace kubesphere-logging-system
      register: kibana_result
      ignore_errors: True
      when:
        - (kibana_check.stdout.find("DEPLOYED") == -1) or (kibana_check.stdout.find("6.7.0-0217") == -1)

    - name: ks-logging | Delete elasticsearch-logging-kibana
      shell: >
        {{ bin_dir }}/helm del --purge elasticsearch-logging-kibana
      ignore_errors: True
      when:
        - (kibana_check.stdout.find("DEPLOYED") == -1) or (kibana_check.stdout.find("6.7.0-0217") == -1)
        - "kibana_result.stderr and 'no matches for kind' in kibana_result.stderr"

    - name: ks-logging | Waiting for seconds
      wait_for: timeout=15
      when:
        - (kibana_check.stdout.find("DEPLOYED") == -1) or (kibana_check.stdout.find("6.7.0-0217") == -1)
        - "kibana_result.stderr and 'no matches for kind' in kibana_result.stderr"

    - name: ks-logging | Deploy elasticsearch-logging-kibana
      shell: >
        {{ bin_dir }}/helm upgrade --install elasticsearch-logging-kibana
        {{ kubesphere_dir }}/logging/kibana-2.2.1.tgz
        -f {{ kubesphere_dir }}/logging/custom-values-kibana.yaml
        --namespace kubesphere-logging-system
      when:
        - (kibana_check.stdout.find("DEPLOYED") == -1) or (kibana_check.stdout.find("6.7.0-0217") == -1)
        - "kibana_result.stderr and 'no matches for kind' in kibana_result.stderr"
  when:
    - logging.kibana.enabled == true


- import_tasks: logsidecar.yaml
  

- name: Kubesphere | Getting minio installation files
  copy:
    src: "{{ item }}"
    dest: "{{ kubesphere_dir }}/"
  loop:
    - "minio-ha"


- name: Kubesphere | Creating manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kubesphere_dir }}/{{ item.file }}"
  with_items:
    - { name: custom-values-minio, file: custom-values-minio.yaml }


- name: Kubesphere | Deploy minio
  shell: >
    {{ bin_dir }}/helm upgrade --install ks-minio
    {{ kubesphere_dir }}/minio-ha
    -f {{ kubesphere_dir }}/custom-values-minio.yaml
    --set fullnameOverride=minio
    --namespace kubesphere-system
    --wait --timeout 1800
  register: minio_status
  ignore_errors: True


- debug:
    msg:
     - 1. check the storage configuration and storage server
     - 2. execute 'helm del --purge ks-minio'
     - 3. Restart the installer pod in kubesphere-system namespace
  when: minio_status.rc != 0


- fail:
    msg: "It is suggested to refer to the above methods for troubleshooting problems"
  when: minio_status.rc != 0


- name: Kubesphere | create minio config directory
  file:
    state: directory
    path: "/root/.config/rclone/"
  when:
    - openpitrix_component_pod.stdout.find("openpitrix-minio-deployment") != -1


- name: Kubesphere | Creating common component manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "/root/.config/rclone/{{ item.file }}"
  with_items:
    - { path: /root/.config/rclone, file: rclone.conf }
  when:
    - openpitrix_component_pod.stdout.find("openpitrix-minio-deployment") != -1


- include_tasks: minio-migration.yaml
  loop:
    - helm
    - vmbased
  when:
    - openpitrix_component_pod.stdout.find("openpitrix-minio-deployment") != -1

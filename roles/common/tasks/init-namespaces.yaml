---

- name: KubeSphere | Get system namespaces
  set_fact:
    systemNamespaces: >-
      kubesphere-system
      kubesphere-controls-system
      {%- if monitoring.enabled is defined and monitoring.enabled %}
      kubesphere-monitoring-system
      {%- endif %}
      {%- if logging.enabled is defined and logging.enabled %}
      kubesphere-logging-system
      {%- endif %}
      {%- if openpitrix.enabled is defined and openpitrix.enabled %}
      openpitrix-system
      {%- endif %}
      {%- if devops.enabled is defined and devops.enabled %}
      kubesphere-devops-system
      {%- endif %}
      {%- if servicemesh.enabled is defined and servicemesh.enabled %}
      istio-system
      {%- endif %}
      {%- if (notification.enabled is defined and notification.enabled) or (alerting.enabled is defined and alerting.enabled) %}
      kubesphere-alerting-system
      {%- endif %}
      {%- if servicemesh.enabled is defined and servicemesh.enabled %}
      istio-system
      {%- endif %}


- set_fact:
    systemNamespacesList: "{{ systemNamespaces.split(' ') }}"

- debug:
    msg: "{{ systemNamespacesList }}"

- name: KubeSphere | Create kubesphere namespace
  command: "{{ bin_dir }}/kubectl create namespace {{ item }}"
  register: import
  failed_when: "import.stderr and 'already exists' not in import.stderr"
  loop: "{{ systemNamespacesList }}"


- name: KubeSphere | Labeling system-workspace
  shell: >
    {{ bin_dir }}/kubectl label ns {{ item }} kubesphere.io/workspace=system-workspace && {{ bin_dir }}/kubectl annotate namespaces {{ item }} creator=admin
  register: import
  failed_when: "import.stderr and 'already' not in import.stderr"
  loop: "{{ ['default', 'kube-public', 'kube-system', systemNamespacesList] | flatten(1) }}"


- name: KubeSphere | Create ImagePullSecrets
  shell: |
    cat <<EOF | kubectl apply -f -
      apiVersion: v1
      kind: Secret
      metadata:
        name: qingcloud
        namespace: "{{ item }}"
      data:
        .dockerconfigjson: eyJhdXRocyI6eyJkb2NrZXJodWIucWluZ2Nsb3VkLmNvbSI6eyJhdXRoIjoiWjNWbGMzUTZaM1ZsYzNRPSJ9fX0=
      type: kubernetes.io/dockerconfigjson
    EOF
  loop: "{{ ['default', 'kube-public', 'kube-system', systemNamespacesList] | flatten(1) }}"

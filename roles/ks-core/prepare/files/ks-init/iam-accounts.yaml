apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  name: anonymous
rules:
  - apiGroups:
      - openpitrix.io
    resources:
      - apps
    verbs:
      - get
      - list
  - apiGroups:
      - config.kubesphere.io
    resources:
      - configs
    verbs:
      - get
      - list

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/rego-override: |-
      package authz
      default allow = false
      allow = true {
        allowedResources := ["users","clustermembers","workspacemembers","members"]
        allowedResources[_] == input.Resource
        input.User.Name == input.Name
      }
      allow = true {
        input.APIGroup == "tenant.kubesphere.io"
        input.KubernetesRequest == false
        allowedVerbs := ["get","list","watch"]
        allowedVerbs[_] == input.Verb
      }
  name: authenticated
rules: 
  - apiGroups:
      - openpitrix.io
    resources:
      - apps
    verbs:
      - get
      - list
  - apiGroups:
      - config.kubesphere.io
    resources:
      - configs
    verbs:
      - get
      - list
  - apiGroups:
      - iam.kubesphere.io
    resources:
      - users
    verbs:
      - list
  - apiGroups:
      - resources.kubesphere.io
    resources:
      - registry
    verbs:
      - get
  - apiGroups:
      - resources.kubesphere.io
    resources:
      - clusters
    verbs:
      - get


---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/aggregation-roles: '["role-template-manage-clusters","role-template-view-clusters","role-template-view-roles","role-template-manage-roles","role-template-view-roles","role-template-view-workspaces","role-template-manage-workspaces","role-template-manage-users","role-template-view-roles","role-template-view-users","role-template-manage-app-templates","role-template-view-app-templates","role-template-manage-platform-settings"]'
    kubesphere.io/creator: admin
  name: platform-admin
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
  - nonResourceURLs:
    - '*'
    verbs:
    - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/aggregation-roles: '[]'
    kubesphere.io/creator: admin
  name: platform-regular
rules: []

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/aggregation-roles: '["role-template-view-users","role-template-manage-users","role-template-view-roles"]'
    kubesphere.io/creator: admin
  name: user-manager
rules:
- apiGroups:
  - '*'
  resources:
  - users
  verbs:
  - '*'
- apiGroups:
  - iam.kubesphere.io
  resources:
  - globalroles
  verbs:
  - get
  - list
  - watch

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/aggregation-roles: '["role-template-view-workspaces","role-template-manage-workspaces","role-template-view-users"]'
    kubesphere.io/creator: admin
  name: workspace-manager
rules:
- apiGroups:
  - '*'
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - namespaces
  - persistentvolumeclaims
  - pods
  - podtemplates
  - replicationcontrollers
  - resourcequotas
  - secrets
  - serviceaccounts
  - services
  - applications
  - controllerrevisions
  - deployments
  - replicasets
  - statefulsets
  - meshpolicies
  - cronjobs
  - jobs
  - devopsprojects
  - devops
  - pipelines
  - s2ibinaries
  - s2ibuilders
  - s2ibuildertemplates
  - s2iruns
  - events
  - ingresses
  - filters
  - pods
  - namespacenetworkpolicies
  - workspacenetworkpolicies
  - ingresses
  - networkpolicies
  - podsecuritypolicies
  - rolebindings
  - roles
  - members
  - servicepolicies
  - federatedconfigmaps
  - federateddeployments
  - federatedingresses
  - federatedjobs
  - federatedlimitranges
  - federatednamespaces
  - federatedpersistentvolumeclaims
  - federatedreplicasets
  - federatedsecrets
  - federatedserviceaccounts
  - federatedservices
  - federatedservicestatuses
  - federatedstatefulsets
  - federatedworkspaces
  - workspaces
  - workspaceroles
  - workspacemembers
  - workspacerolebindings
  verbs:
  - '*'
- apiGroups:
  - '*'
  resources:
  - users
  verbs:
  - get
  - list
  - watch

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/module: Clusters Management
    iam.kubesphere.io/role-template-rules: '{"clusters": "view"}'
    kubesphere.io/alias-name: Clusters View   
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-view-clusters
rules:
- apiGroups:
  - '*'
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - namespaces
  - nodes
  - persistentvolumeclaims
  - pods
  - podtemplates
  - replicationcontrollers
  - resourcequotas
  - secrets
  - serviceaccounts
  - services
  - applications
  - controllerrevisions
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  - meshpolicies
  - cronjobs
  - jobs
  - federatedservicestatuses
  - devopsprojects
  - devops
  - pipelines
  - s2ibinaries
  - s2ibuilders
  - s2ibuildertemplates
  - s2iruns
  - events
  - ingresses
  - filters
  - pods
  - namespacenetworkpolicies
  - workspacenetworkpolicies
  - destinationrules
  - envoyfilters
  - gateways
  - serviceentries
  - sidecars
  - virtualservices
  - ingresses
  - networkpolicies
  - podsecuritypolicies
  - rolebindings
  - roles
  - servicepolicies
  - strategies
  - storageclasses
  - federatedconfigmaps
  - federateddeployments
  - federatedingresses
  - federatedjobs
  - federatedlimitranges
  - federatednamespaces
  - federatedpersistentvolumeclaims
  - federatedreplicasets
  - federatedsecrets
  - federatedserviceaccounts
  - federatedservices
  - federatedstatefulsets
  - devops
  - clusters
  - cluster
  - clusterrolebindings
  - clusterroles
  - clustermembers
  - components
  - componenthealth
  - volumesnapshots
  - quotas
  - nodes/pods
  - pods/log
  - nodes
  - abnormalworkloads
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - monitoring.kubesphere.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/module: Clusters Management
    iam.kubesphere.io/role-template-rules: '{"clusters": "manage"}'
    kubesphere.io/alias-name: Clusters Management
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-manage-clusters
rules:
- apiGroups:
  - '*'
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - namespaces
  - nodes
  - persistentvolumeclaims
  - pods
  - podtemplates
  - replicationcontrollers
  - resourcequotas
  - secrets
  - serviceaccounts
  - services
  - applications
  - controllerrevisions
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  - meshpolicies
  - cronjobs
  - jobs
  - federatedservicestatuses
  - devopsprojects
  - devops
  - pipelines
  - s2ibinaries
  - s2ibuilders
  - s2ibuildertemplates
  - s2iruns
  - events
  - ingresses
  - filters
  - pods
  - namespacenetworkpolicies
  - workspacenetworkpolicies
  - destinationrules
  - envoyfilters
  - gateways
  - serviceentries
  - sidecars
  - virtualservices
  - ingresses
  - networkpolicies
  - podsecuritypolicies
  - rolebindings
  - roles
  - servicepolicies
  - strategies
  - storageclasses
  - federatedconfigmaps
  - federateddeployments
  - federatedingresses
  - federatedjobs
  - federatedlimitranges
  - federatednamespaces
  - federatedpersistentvolumeclaims
  - federatedreplicasets
  - federatedsecrets
  - federatedserviceaccounts
  - federatedservices
  - federatedstatefulsets
  - devops
  - clusters
  - cluster
  - clusterrolebindings
  - clusterroles
  - clustermembers
  - components
  - componenthealth
  - volumesnapshots
  - quotas
  - nodes/pods
  - pods/log
  - nodes
  - abnormalworkloads
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - monitoring.kubesphere.io
  resources:
  - '*'
  verbs:
  - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/module: Access Control
    iam.kubesphere.io/role-template-rules: '{"workspaces": "view"}'
    kubesphere.io/alias-name: Workspaces View
  labels:
    iam.kubesphere.io/role-template: "true"
    kubefed.io/managed: "true"
  name: role-template-view-workspaces
rules:
- apiGroups:
  - '*'
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - namespaces
  - persistentvolumeclaims
  - pods
  - podtemplates
  - replicationcontrollers
  - resourcequotas
  - secrets
  - serviceaccounts
  - services
  - applications
  - controllerrevisions
  - deployments
  - replicasets
  - statefulsets
  - meshpolicies
  - cronjobs
  - jobs
  - devopsprojects
  - devops
  - pipelines
  - s2ibinaries
  - s2ibuilders
  - s2ibuildertemplates
  - s2iruns
  - events
  - ingresses
  - filters
  - pods
  - namespacenetworkpolicies
  - workspacenetworkpolicies
  - ingresses
  - networkpolicies
  - podsecuritypolicies
  - rolebindings
  - roles
  - members
  - servicepolicies
  - federatedconfigmaps
  - federateddeployments
  - federatedingresses
  - federatedjobs
  - federatedlimitranges
  - federatednamespaces
  - federatedpersistentvolumeclaims
  - federatedreplicasets
  - federatedsecrets
  - federatedserviceaccounts
  - federatedservices
  - federatedservicestatuses
  - federatedstatefulsets
  - federatedworkspaces
  - workspaces
  - workspaceroles
  - workspacemembers
  - workspacerolebindings
  verbs:
  - get
  - list
  - watch

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/module: Access Control
    iam.kubesphere.io/role-template-rules: '{"workspaces": "manage"}'
    kubesphere.io/alias-name: Workspaces Management
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-manage-workspaces
roles:
- apiGroups:
  - '*'
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - namespaces
  - persistentvolumeclaims
  - pods
  - podtemplates
  - replicationcontrollers
  - resourcequotas
  - secrets
  - serviceaccounts
  - services
  - applications
  - controllerrevisions
  - deployments
  - replicasets
  - statefulsets
  - meshpolicies
  - cronjobs
  - jobs
  - devopsprojects
  - devops
  - pipelines
  - s2ibinaries
  - s2ibuilders
  - s2ibuildertemplates
  - s2iruns
  - events
  - ingresses
  - filters
  - pods
  - namespacenetworkpolicies
  - workspacenetworkpolicies
  - ingresses
  - networkpolicies
  - podsecuritypolicies
  - rolebindings
  - roles
  - members
  - servicepolicies
  - federatedconfigmaps
  - federateddeployments
  - federatedingresses
  - federatedjobs
  - federatedlimitranges
  - federatednamespaces
  - federatedpersistentvolumeclaims
  - federatedreplicasets
  - federatedsecrets
  - federatedserviceaccounts
  - federatedservices
  - federatedservicestatuses
  - federatedstatefulsets
  - federatedworkspaces
  - workspaces
  - workspaceroles
  - workspacemembers
  - workspacerolebindings
  verbs:
  - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/module: Access Control
    iam.kubesphere.io/role-template-rules: '{"users": "view"}'
    kubesphere.io/alias-name: Users View
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-view-users
rules:
- apiGroups:
  - '*'
  resources:
  - users
  verbs:
  - get
  - list
  - watch

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["role-template-view-roles"]'
    iam.kubesphere.io/module: Access Control
    iam.kubesphere.io/role-template-rules: '{"users": "manage"}'
    kubesphere.io/alias-name: Users Management
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-manage-users
rules:
- apiGroups:
  - '*'
  resources:
  - users
  verbs:
  - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/module: Access Control
    iam.kubesphere.io/role-template-rules: '{"roles": "view"}'
    kubesphere.io/alias-name: Roles View
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-view-roles
rules:
- apiGroups:
  - iam.kubesphere.io
  resources:
  - globalroles
  verbs:
  - get
  - list
  - watch

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["role-template-view-roles"]'
    iam.kubesphere.io/module: Access Control
    iam.kubesphere.io/role-template-rules: '{"roles": "manage"}'
    kubesphere.io/alias-name: Roles Management
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-manage-roles
rules:
- apiGroups:
  - '*'
  resources:
  - globalroles
  verbs:
  - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/module: Apps Management
    iam.kubesphere.io/role-template-rules: '{"app-templates": "view"}'
    kubesphere.io/alias-name: App Templates View
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-view-app-templates
rules:
- apiGroups:
  - openpitrix.io
  resources:
  - reviews
  - apps
  - apps/versions
  - categories
  verbs:
  - get
  - list

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/module: Apps Management
    iam.kubesphere.io/role-template-rules: '{"app-templates": "manage"}'
    kubesphere.io/alias-name: App Templates Management
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-manage-app-templates
rules:
- apiGroups:
  - openpitrix.io
  resources:
  - '*'
  verbs:
  - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/module: Platform Settings
    iam.kubesphere.io/role-template-rules: '{"platform-settings": "manage"}'
    kubesphere.io/alias-name: Platform Settings Management
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-manage-platform-settings
rules:
- apiGroups:
  - logging.kubesphere.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - '*'
  resources:
  - pods
  verbs:
  - log

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRoleBinding
metadata:
  name: admin
roleRef:
  apiGroup: iam.kubesphere.io/v1alpha2
  kind: GlobalRole
  name: platform-admin
subjects:
  - apiGroup: iam.kubesphere.io/v1alpha2
    kind: User
    name: admin

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRoleBinding
metadata:
  name: anonymous
roleRef:
  apiGroup: iam.kubesphere.io/v1alpha2
  kind: GlobalRole
  name: anonymous
subjects:
  - apiGroup: iam.kubesphere.io/v1alpha2
    kind: Group
    name: system:anonymous

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: GlobalRoleBinding
metadata:
  name: authenticated
roleRef:
  apiGroup: iam.kubesphere.io/v1alpha2
  kind: GlobalRole
  name: authenticated
subjects:
  - apiGroup: iam.kubesphere.io/v1alpha2
    kind: Group
    name: system:authenticated

---
apiVersion: tenant.kubesphere.io/v1alpha2
kind: WorkspaceTemplate
metadata:
  annotations:
    kubesphere.io/creator: admin
  name: system-workspace
spec:
  placement:
    clusterSelector: {}
  template:
    spec:
      manager: admin
      networkIsolation: false

---  
apiVersion: iam.kubesphere.io/v1alpha2
kind: WorkspaceRole
metadata:
  annotations:
    iam.kubesphere.io/module: Projects Management
    iam.kubesphere.io/role-template-rules: '{"projects": "view"}'
    kubesphere.io/alias-name: Projects View
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-view-projects
rules:
- apiGroups:
  - '*'
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - podtemplates
  - replicationcontrollers
  - resourcequotas
  - secrets
  - serviceaccounts
  - services
  - applications
  - controllerrevisions
  - deployments
  - replicasets
  - statefulsets
  - meshpolicies
  - cronjobs
  - jobs
  - s2ibinaries
  - s2ibuilders
  - s2ibuildertemplates
  - s2iruns
  - events
  - ingresses
  - pods
  - pods/log
  - namespacenetworkpolicies
  - ingresses
  - networkpolicies
  - podsecuritypolicies
  - rolebindings
  - roles
  - members
  - servicepolicies
  - federatedconfigmaps
  - federateddeployments
  - federatedingresses
  - federatedjobs
  - federatedlimitranges
  - federatednamespaces
  - federatedpersistentvolumeclaims
  - federatedreplicasets
  - federatedsecrets
  - federatedserviceaccounts
  - federatedservices
  - federatedservicestatuses
  - federatedstatefulsets
  verbs:
  - get
  - list
  - watch

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: WorkspaceRole
metadata:
  annotations:
    iam.kubesphere.io/module: Projects Management
    iam.kubesphere.io/role-template-rules: '{"projects": "create"}'
    kubesphere.io/alias-name: Projects Create
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-create-projects
rules:
- apiGroups:
  - '*'
  resources:
  - 'namespaces'
  verbs:
  - 'create'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: WorkspaceRole
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["role-template-view-projects","role-template-view-users","role-template-create-projects"]'
    iam.kubesphere.io/module: Projects Management
    iam.kubesphere.io/role-template-rules: '{"projects": "manage"}'
    kubesphere.io/alias-name: Projects Management
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-manage-projects
rules:
- apiGroups:
  - '*'
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - podtemplates
  - replicationcontrollers
  - resourcequotas
  - secrets
  - serviceaccounts
  - services
  - applications
  - controllerrevisions
  - deployments
  - replicasets
  - statefulsets
  - meshpolicies
  - cronjobs
  - jobs
  - s2ibinaries
  - s2ibuilders
  - s2ibuildertemplates
  - s2iruns
  - events
  - ingresses
  - pods
  - pods/log
  - namespacenetworkpolicies
  - ingresses
  - networkpolicies
  - podsecuritypolicies
  - rolebindings
  - roles
  - members
  - servicepolicies
  - federatedconfigmaps
  - federateddeployments
  - federatedingresses
  - federatedjobs
  - federatedlimitranges
  - federatednamespaces
  - federatedpersistentvolumeclaims
  - federatedreplicasets
  - federatedsecrets
  - federatedserviceaccounts
  - federatedservices
  - federatedservicestatuses
  - federatedstatefulsets
  verbs:
  - '*'

---  
apiVersion: iam.kubesphere.io/v1alpha2
kind: WorkspaceRole
metadata:
  annotations:
    iam.kubesphere.io/module: Devops Management
    iam.kubesphere.io/role-template-rules: '{"devops": "view"}'
    kubesphere.io/alias-name: Devops View
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-view-devops
rules:
- apiGroups:
  - '*'
  resources:
  - 'piplines'
  - 'piplines/runs'
  - 'piplines/branches'
  - 'piplines/checkScriptCompile'
  - 'piplines/consolelog'
  - 'piplines/scan'
  - 'piplines/sonarstatus'
  - 'users'
  - 'checkCron'
  - 'credentials'
  - 'credentials/usage'
  - 'roles'
  - 'members'
  verbs:
  - 'get'
  - 'list'
  - 'watch'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: WorkspaceRole
metadata:
  annotations:
    iam.kubesphere.io/module: Devops Management
    iam.kubesphere.io/role-template-rules: '{"devops": "create"}'
    kubesphere.io/alias-name: Devops Create
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-create-devops
rules:
- apiGroups:
  - '*'
  resources:
  - 'devops'
  - 'devopsprojects'
  verbs:
  - 'create'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: WorkspaceRole
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["role-template-view-devops"]'
    iam.kubesphere.io/module: Devops Management
    iam.kubesphere.io/role-template-rules: '{"devops": "manage"}'
    kubesphere.io/alias-name: Devops Management
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-manage-devops
rules:
- apiGroups:
  - '*'
  resources:
  - 'piplines'
  - 'piplines/runs'
  - 'piplines/branches'
  - 'piplines/checkScriptCompile'
  - 'piplines/consolelog'
  - 'piplines/scan'
  - 'piplines/sonarstatus'
  - 'users'
  - 'checkCron'
  - 'credentials'
  - 'credentials/usage'
  - 'roles'
  - 'members'
  verbs:
  - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: WorkspaceRole
metadata:
  annotations:
    iam.kubesphere.io/module: Apps Management
    iam.kubesphere.io/role-template-rules: '{"app-repos": "view"}'
    kubesphere.io/alias-name: Workspace App Repos View
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-view-app-repos
rules:
- apiGroups:
  - 'openpitrix.io'
  resources:
  - 'repos'
  verbs:
  - 'get'
  - 'list'
  - 'watch'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: WorkspaceRole
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["role-template-view-app-repos"]'
    iam.kubesphere.io/module: Apps Management
    iam.kubesphere.io/role-template-rules: '{"app-repos": "manage"}'
    kubesphere.io/alias-name: Workspace App Repos Management
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-manage-app-repos
rules:
- apiGroups:
  - 'openpitrix.io'
  resources:
  - '*'
  verbs:
  - 'repos'


---  
apiVersion: iam.kubesphere.io/v1alpha2
kind: WorkspaceRole
metadata:
  annotations:
    iam.kubesphere.io/module: Apps Management
    iam.kubesphere.io/role-template-rules: '{"app-templates": "view"}'
    kubesphere.io/alias-name: Workspace App Templates View
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-view-app-templates
rules:
- apiGroups:
  - 'openpitrix.io'
  resources:
  - 'apps'
  verbs:
  - 'get'
  - 'list'
  - 'watch'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: WorkspaceRole
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["role-template-view-app-templates"]'
    iam.kubesphere.io/module: Apps Management
    iam.kubesphere.io/role-template-rules: '{"app-templates": "manage"}'
    kubesphere.io/alias-name: Workspace App Templates Management
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-manage-app-templates
rules:
- apiGroups:
  - 'openpitrix.io'
  resources:
  - 'apps'
  verbs:
  - '*'

---  
apiVersion: iam.kubesphere.io/v1alpha2
kind: WorkspaceRole
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["role-template-view-users"]'
    iam.kubesphere.io/module: Access Control
    iam.kubesphere.io/role-template-rules: '{"roles": "view"}'
    kubesphere.io/alias-name: Workspace Roles View
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-view-roles
rules:
- apiGroups:
  - '*'
  resources:
  - 'workspaceroles'
  verbs:
  - 'get'
  - 'list'
  - 'watch'


---
apiVersion: iam.kubesphere.io/v1alpha2
kind: WorkspaceRole
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["role-template-view-users", "role-template-view-roles"]'
    iam.kubesphere.io/module: Access Control
    iam.kubesphere.io/role-template-rules: '{"roles": "manage"}'
    kubesphere.io/alias-name: Workspace Roles Management
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-manage-roles
rules:
- apiGroups:
  - '*'
  resources:
  - 'workspaceroles'
  verbs:
  - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: WorkspaceRole
metadata:
  annotations:
    iam.kubesphere.io/module: Access Control
    iam.kubesphere.io/role-template-rules: '{"members": "view"}'
    kubesphere.io/alias-name: Workspace Members View
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-view-users
rules:
- apiGroups:
  - '*'
  resources:
  - 'workspacemembers'
  verbs:
  - 'get'
  - 'list'
  - 'watch'


---
apiVersion: iam.kubesphere.io/v1alpha2
kind: WorkspaceRole
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["role-template-view-users","role-template-view-roles"]'
    iam.kubesphere.io/module: Access Control
    iam.kubesphere.io/role-template-rules: '{"members": "manage"}'
    kubesphere.io/alias-name: Workspace Members Management
  labels:
    iam.kubesphere.io/role-template: "true"
  name: role-template-manage-users
rules:
- apiGroups:
  - '*'
  resources:
  - 'workspacemembers'
  verbs:
  - '*'
- apiGroups:
  - '*'
  resources:
  - 'workspaceroles'
  verbs:
  - 'list'
  - 'get'
  - 'watch'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: workspace-admin
role:
  apiVersion: iam.kubesphere.io/v1alpha2
  kind: WorkspaceRole
  metadata:
    annotations:
      iam.kubesphere.io/aggregation-roles: '["role-template-manage-projects","role-template-view-projects","role-template-create-projects","role-template-create-devops","role-template-view-devops","role-template-manage-devops","role-template-manage-app-templates","role-template-view-app-templates","role-template-manage-app-repos","role-template-view-app-repos","role-template-view-users","role-template-manage-users","role-template-manage-roles","role-template-view-roles"]'
      kubesphere.io/creator: system
    name: admin
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: workspace-viewer
role:
  apiVersion: iam.kubesphere.io/v1alpha2
  kind: WorkspaceRole
  metadata:
    annotations:
      iam.kubesphere.io/aggregation-roles: '["role-template-view-projects","role-template-view-devops","role-template-view-app-templates","role-template-view-app-repos","role-template-view-users","role-template-view-roles"]'
      kubesphere.io/creator: system
    name: viewer
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - 'get'
    - 'list'
    - 'watch'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: workspace-regular
role:
  apiVersion: iam.kubesphere.io/v1alpha2
  kind: WorkspaceRole
  metadata:
    annotations:
      iam.kubesphere.io/aggregation-roles: '["role-template-view-users","role-template-view-projects"]'
      kubesphere.io/creator: system
    name: regular
  rules:
  - apiGroups:
    - '*'
    resources:
    - workspaces
    - workspacemembers
    verbs:
    - get
    - list
    - watch

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: workspace-self-provisioner
role:
  apiVersion: iam.kubesphere.io/v1alpha2
  kind: WorkspaceRole
  metadata:
    annotations:
      iam.kubesphere.io/aggregation-roles: '["role-template-view-users","role-template-view-projects","role-template-create-projects","role-template-create-devops"]'
      kubesphere.io/creator: system
    name: self-provisioner
  rules:
  - apiGroups:
    - '*'
    resources:
    - workspaces
    - workspacemembers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - '*'
    resources:
    - namespaces
    - devops
    verbs:
    - create

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: project-admin
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/aggregation-roles: '["role-template-view-members","role-template-manage-members","role-template-management-app-workloads","role-template-view-app-workloads","role-template-management-volumes","role-template-view-volumes","role-template-management-secrets","role-template-view-secrets","role-template-manage-alerting-policies","role-template-view-alerting-policies","role-template-view-alerting-messages","role-template-manage-custom-monitoring","role-template-manage-alerting-messages","role-template-view-roles","role-template-manage-roles","role-template-view-roles","role-template-manage-project-settings","role-template-manage-network-policies"]'
      kubesphere.io/creator: system
      kubesphere.io/description: Allows admin access to perform any action on any resource, it gives full control over every resource in the namespace.
    name: admin
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: project-operator
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/aggregation-roles: '["role-template-view-members","role-template-management-app-workloads","role-template-view-app-workloads","role-template-management-volumes","role-template-view-volumes","role-template-management-secrets","role-template-view-secrets","role-template-manage-alerting-policies","role-template-view-alerting-policies","role-template-view-alerting-messages","role-template-manage-custom-monitoring","role-template-manage-alerting-messages","role-template-view-alerting-messages","role-template-view-roles","role-template-view-members","role-template-view-roles"]'
      kubesphere.io/creator: system
      kubesphere.io/description: The maintainer of the namespace who can manage resources other than users and roles in the namespace.
    name: operator
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    - extensions
    - batch
    - logging.kubesphere.io
    - monitoring.kubesphere.io
    - iam.kubesphere.io
    - autoscaling
    - alerting.kubesphere.io
    - openpitrix.io
    - app.k8s.io
    - servicemesh.kubesphere.io
    - operations.kubesphere.io
    - devops.kubesphere.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - ""
    - resources.kubesphere.io
    resources:
    - jobs
    - cronjobs
    - daemonsets
    - deployments
    - horizontalpodautoscalers
    - ingresses
    - endpoints
    - configmaps
    - events
    - persistentvolumeclaims
    - pods
    - podtemplates
    - pods
    - secrets
    - services
    verbs:
    - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: project-viewer
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: Allows viewer access to view all resources in the namespace.
    name: viewer
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch


---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: role-template-view-alerting-messages
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/module: Monitoring & Alerting
      iam.kubesphere.io/role-template-rules: '{"alert-messages": "view"}'
      kubesphere.io/alias-name: Alerting Messages View
    labels:
      iam.kubesphere.io/role-template: "true"
    name: role-template-view-alerting-messages
  rules:
  - apiGroups:
    - 'alerting.kubesphere.io'
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: role-template-manage-alerting-messages
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/dependencies: '["role-template-view-alerting-messages"]'
      iam.kubesphere.io/module: Monitoring & Alerting
      iam.kubesphere.io/role-template-rules: '{"alert-messages": "manage"}'
      kubesphere.io/alias-name: Alerting Messages Management
    labels:
      iam.kubesphere.io/role-template: "true"
    name: role-template-manage-alerting-messages
  rules: 
  - apiGroups:
    - 'alerting.kubesphere.io'
    resources:
    - '*'
    verbs:
    - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: role-template-view-alerting-policies
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/module: Monitoring & Alerting
      iam.kubesphere.io/role-template-rules: '{"alert-policies": "view"}'
      kubesphere.io/alias-name: Alerting Policies View
    labels:
      iam.kubesphere.io/role-template: "true"
    name: role-template-view-alerting-policies
  rules:
  - apiGroups:
    - 'alerting.kubesphere.io'
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: role-template-manage-alerting-policies
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/dependencies: '["role-template-view-alerting-policies"]'
      iam.kubesphere.io/module: Monitoring & Alerting
      iam.kubesphere.io/role-template-rules: '{"alert-policies": "manage"}'
      kubesphere.io/alias-name: Alerting Policies Management
    labels:
      iam.kubesphere.io/role-template: "true"
    name: role-template-manage-alerting-policies
  rules: 
  - apiGroups:
    - 'alerting.kubesphere.io'
    resources:
    - '*'
    verbs:
    - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: role-template-manage-custom-monitoring
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/module: Monitoring & Alerting
      iam.kubesphere.io/role-template-rules: '{"custom-monitoring": "manage"}'
      kubesphere.io/alias-name: Custom Monitoring
    labels:
      iam.kubesphere.io/role-template: "true"
    name: role-template-manage-custom-monitoring
  rules:
  - apiGroups:
    - 'monitoring.kubesphere.io'
    resources:
    - '*'
    verbs:
    - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: role-template-view-members
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/module: Access Control
      iam.kubesphere.io/role-template-rules: '{"members": "view"}'
      kubesphere.io/alias-name: Project Members View
    labels:
      iam.kubesphere.io/role-template: "true"
    name: role-template-view-members
  rules:
  - apiGroups:
    - '*'
    resources:
    - 'members'
    - 'rolebindings'
    verbs:
    - get
    - list
    - watch

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: role-template-view-members
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/module: Access Control
      iam.kubesphere.io/role-template-rules: '{"members": "view"}'
      kubesphere.io/alias-name: Project Members View
    labels:
      iam.kubesphere.io/role-template: "true"
    name: role-template-view-members
  rules:
  - apiGroups:
    - '*'
    resources:
    - 'members'
    - 'rolebindings'
    verbs:
    - get
    - list
    - watch

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: role-template-manage-members
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/dependencies: '["role-template-view-roles", "role-template-view-members"]'
      iam.kubesphere.io/module: Access Control
      iam.kubesphere.io/role-template-rules: '{"members": "manage"}'
      kubesphere.io/alias-name: Project Members Management
    labels:
      iam.kubesphere.io/role-template: "true"
    name: role-template-manage-members
  rules:
  - apiGroups:
    - '*'
    resources:
    - 'members'
    - 'rolebindings'
    verbs:
    - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: role-template-manage-project-settings
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/module: Project Settings
      iam.kubesphere.io/role-template-rules: '{"project-settings": "manage"}'
      kubesphere.io/alias-name: Project Settings
    labels:
      iam.kubesphere.io/role-template: "true"
    name: role-template-manage-project-settings
  rules:
  - apiGroups:
    - '*'
    resources:
    - 'namespaces'
    verbs:
    - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: role-template-view-roles
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/module: Access Control
      iam.kubesphere.io/role-template-rules: '{"roles": "view"}'
      kubesphere.io/alias-name: Project Roles View
    labels:
      iam.kubesphere.io/role-template: "true"
    name: role-template-view-roles
  rules:
  - apiGroups:
    - '*'
    resources:
    - 'roles'
    verbs:
    - get
    - list
    - watch 

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: role-template-manage-roles
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/dependencies: '["role-template-view-roles"]'
      iam.kubesphere.io/module: Access Control
      iam.kubesphere.io/role-template-rules: '{"roles": "manage"}'
      kubesphere.io/alias-name: Project Roles Management
    labels:
      iam.kubesphere.io/role-template: "true"
    name: role-template-manage-roles
  rules:
  - apiGroups:
    - '*'
    resources:
    - 'roles'
    verbs:
    - '*' 

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: role-template-view-app-workloads
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/module: Application Workloads
      iam.kubesphere.io/role-template-rules: '{"applications": "view", "deployments":
        "view", "statefulsets": "view", "daemonsets": "view", "jobs": "view", "cronjobs":
        "view", "pods": "view", "services": "view", "ingresses": "view", "configmaps":
        "view", "s2ibuilders": "view"}'
      kubesphere.io/alias-name: Application Workloads View
    labels:
      iam.kubesphere.io/role-template: "true"
    name: role-template-view-app-workloads
  rules:
  - apiGroups:
    - '*'
    resources:
    - services
    - applications
    - controllerrevisions
    - deployments
    - replicasets
    - statefulsets
    - daemonsets
    - jobs
    - cronjobs
    - pods
    - services
    - ingresses
    - configmaps
    - s2ibuilders
    verbs:
    - get
    - list
    - watch

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: role-template-management-app-workloads
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/dependencies: '["role-template-view-app-workloads"]'
      iam.kubesphere.io/module: Application Workloads
      iam.kubesphere.io/role-template-rules: '{"applications": "manage", "deployments":
        "manage", "statefulsets": "manage", "daemonsets": "manage", "jobs": "manage",
        "cronjobs": "manage", "pods": "manage", "services": "manage", "ingresses":
        "manage", "configmaps": "manage", "s2ibuilders": "manage"}'
      kubesphere.io/alias-name: Application Workloads Management
    labels:
      iam.kubesphere.io/role-template: "true"
    name: role-template-management-app-workloads
  rules:
  - apiGroups:
    - '*'
    resources:
    - services
    - applications
    - controllerrevisions
    - deployments
    - replicasets
    - statefulsets
    - daemonsets
    - jobs
    - cronjobs
    - pods
    - services
    - ingresses
    - configmaps
    - s2ibuilders
    verbs:
    - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: role-template-view-secrets
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/module: Secrets Management
      iam.kubesphere.io/role-template-rules: '{"secrets": "view"}'
      kubesphere.io/alias-name: Secrets View
    labels:
      iam.kubesphere.io/role-template: "true"
    name: role-template-view-secrets
  rules:
  - apiGroups:
    - '*'
    resources:
    - 'secrets'
    verbs:
    - get
    - list
    - watch


---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: role-template-management-secrets
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/dependencies: '["role-template-view-secrets"]'
      iam.kubesphere.io/module: Secrets Management
      iam.kubesphere.io/role-template-rules: '{"secrets": "manage"}'
      kubesphere.io/alias-name: Secrets Management
    labels:
      iam.kubesphere.io/role-template: "true"
    name: role-template-management-secrets
  rules: 
  - apiGroups:
    - '*'
    resources:
    - 'secrets'
    verbs:
    - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: role-template-view-volumes
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/module: Volumes Management
      iam.kubesphere.io/role-template-rules: '{"volumes": "view"}'
      kubesphere.io/alias-name: Volumes View
    labels:
      iam.kubesphere.io/role-template: "true"
    name: role-template-view-volumes
  rules:
  - apiGroups:
    - '*'
    resources:
    - 'persistentvolumeclaims'
    verbs:
    - get
    - list
    - watch

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: role-template-management-volumes
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/dependencies: '["role-template-view-volumes"]'
      iam.kubesphere.io/module: Volumes Management
      iam.kubesphere.io/role-template-rules: '{"volumes": "manage"}'
      kubesphere.io/alias-name: Volumes Management
    labels:
      iam.kubesphere.io/role-template: "true"
    name: role-template-management-volumes
  rules:
  - apiGroups:
    - '*'
    resources:
    - 'persistentvolumeclaims'
    verbs:
    - '*'

---
apiVersion: iam.kubesphere.io/v1alpha2
kind: RoleBase
metadata:
  name: role-template-view-secrets
role:
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      iam.kubesphere.io/module: Secrets Management
      iam.kubesphere.io/role-template-rules: '{"secrets": "view"}'
      kubesphere.io/alias-name: Secrets View
    labels:
      iam.kubesphere.io/role-template: "true"
    name: role-template-view-secrets
  rules:
  - apiGroups:
    - '*'
    resources:
    - 'secrets'
    verbs:
    - get
    - list
    - watch







apiVersion: v1
data:
  kubesphere.yaml: |
    authentication:
      authenticateRateLimiterMaxTries: 5
      authenticationRateLimiterDuration: 30m0s
      maxAuthenticateRetries: 6
      multipleLogin: false
      jwtSecret: "Kub3sp83r3!"
    ldap:
      host: openldap.kubesphere-system.svc:389
      managerDN: cn=admin,dc=kubesphere,dc=io
      managerPassword: admin
      userSearchBase: ou=Users,dc=kubesphere,dc=io
      groupSearchBase: ou=Groups,dc=kubesphere,dc=io
    redis:
      host: redis.kubesphere-system.svc
      port: 6379
      password: ""
      db: 0
{% if devops.enabled or openpitrix.enabled %}
    s3:
      endpoint: http://minio.kubesphere-system.svc:9000
      region: us-east-1
      disableSSL: true
      forcePathStyle: true
      accessKeyID: openpitrixminioaccesskey
      secretAccessKey: openpitrixminiosecretkey
      bucket: s2i-binaries
{% endif %}
{% if devops.enabled or openpitrix.enabled or notification.enabled or alerting.enabled %}
    mysql:
      host: mysql.kubesphere-system.svc:3306
      username: root
      password: password
      maxIdleConnections: 100
      maxOpenConnections: 100
      maxConnectionLifeTime: 10s
{% endif %}

{% if network is defined and network.enableNetworkPolicy is defined and network.enableNetworkPolicy %}
      network:
        enableNetworkPolicy: true
{% endif %}


{% if devops.enabled is defined and devops.enabled == true %}
    devops:
      host: http://ks-jenkins.kubesphere-devops-system.svc/
      username: admin
      password: {{ ks_token_str }}
      maxConnections: 100
{% if externalSonarUrl is defined and externalSonarToken is defined %}
    sonarQube:
      host: {{ externalSonarUrl }}
      token: {{ externalSonarToken }}
{% endif %}
{% endif %}

{% if servicemesh.enabled is defined and servicemesh.enabled == true %}
    servicemesh:
      istioPilotHost: http://istio-pilot.istio-system.svc:8080/version
      jaegerQueryHost: http://jaeger-query.istio-system.svc:16686
      servicemeshPrometheusHost: http://prometheus-k8s.kubesphere-monitoring-system.svc:9090
{% endif %}

{% if openpitrix.enabled is defined and openpitrix.enabled == true %}
    openpitrix:
      runtimeManagerEndpoint:    "hyperpitrix.openpitrix-system.svc:9103"
      clusterManagerEndpoint:    "hyperpitrix.openpitrix-system.svc:9104"
      repoManagerEndpoint:       "hyperpitrix.openpitrix-system.svc:9101"
      appManagerEndpoint:        "hyperpitrix.openpitrix-system.svc:9102"
      categoryManagerEndpoint:   "hyperpitrix.openpitrix-system.svc:9113"
      attachmentManagerEndpoint: "hyperpitrix.openpitrix-system.svc:9122"
      repoIndexerEndpoint:       "hyperpitrix.openpitrix-system.svc:9108"
{% endif %}

{% if multicluster.enabled is defined and multicluster.enabled == true %}
    multicluster:
      enable: true
      agentImage: {{ tower_repo }}/{{ tower_image }}:{{ tower_image_tag }}
      proxyPublishService: tower.kubesphere-system.svc
{% endif %}

    monitoring:
      endpoint: http://prometheus-operated.kubesphere-monitoring-system.svc:9090

{% if logging.enabled is defined and logging.enabled == true %}
    logging:
{% if logging.externalElasticsearchUrl is defined and logging.externalElasticsearchPort is defined %}
      host: http://{{ logging.externalElasticsearchUrl }}:{{ logging.externalElasticsearchPort }}
{% else %}
      host: http://elasticsearch-logging-data.kubesphere-logging-system.svc.cluster.local:9200
{% endif %}
      indexPrefix: ks-{{ logging.elkPrefix }}-log
{% endif %}

{% if events.enabled is defined and events.enabled == true %}
    events:
{% if logging.externalElasticsearchUrl is defined and logging.externalElasticsearchPort is defined %}
      host: http://{{ logging.externalElasticsearchUrl }}:{{ logging.externalElasticsearchPort }}
{% else %}
      host: http://elasticsearch-logging-data.kubesphere-logging-system.svc.cluster.local:9200
{% endif %}
      indexPrefix: ks-{{ logging.elkPrefix }}-events
{% endif %}

{% if auditing.enabled is defined and auditing.enabled == true %}
    auditing:
{% if logging.externalElasticsearchUrl is defined and logging.externalElasticsearchPort is defined %}
      host: http://{{ logging.externalElasticsearchUrl }}:{{ logging.externalElasticsearchPort }}
{% else %}
      host: http://elasticsearch-logging-data.kubesphere-logging-system.svc.cluster.local:9200
{% endif %}
      indexPrefix: ks-{{ logging.elkPrefix }}-auditing
{% endif %}

{% if alerting.enabled is defined and alerting.enabled == true %}
    alerting:
      endpoint: http://alerting.kubesphere-alerting-system.svc
{% endif %}

{% if notification.enabled is defined and notification.enabled == true %}
    notification:
      endpoint: http://notification.kubesphere-alerting-system.svc
{% endif %}

kind: ConfigMap
metadata:
  name: kubesphere-config
  namespace: kubesphere-system
